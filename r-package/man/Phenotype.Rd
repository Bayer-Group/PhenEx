% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenotype.R
\name{Phenotype}
\alias{Phenotype}
\title{Base Phenotype Class}
\description{
A phenotype is a description of the state of a person at a specific time.
In PhenEx, phenotypes are implemented using the Phenotype class with clear
separation between the "what" (phenotype definition) and the "how" (execution).
}
\details{
R6 class wrapping PhenEx Python Phenotype functionality
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{py_object}}{The underlying Python Phenotype object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Phenotype-new}{\code{Phenotype$new()}}
\item \href{#method-Phenotype-execute}{\code{Phenotype$execute()}}
\item \href{#method-Phenotype-get_name}{\code{Phenotype$get_name()}}
\item \href{#method-Phenotype-set_name}{\code{Phenotype$set_name()}}
\item \href{#method-Phenotype-get_description}{\code{Phenotype$get_description()}}
\item \href{#method-Phenotype-get_display_name}{\code{Phenotype$get_display_name()}}
\item \href{#method-Phenotype-get_codelists}{\code{Phenotype$get_codelists()}}
\item \href{#method-Phenotype-to_list}{\code{Phenotype$to_list()}}
\item \href{#method-Phenotype-or}{\code{Phenotype$or()}}
\item \href{#method-Phenotype-not}{\code{Phenotype$not()}}
\item \href{#method-Phenotype-add}{\code{Phenotype$add()}}
\item \href{#method-Phenotype-subtract}{\code{Phenotype$subtract()}}
\item \href{#method-Phenotype-multiply}{\code{Phenotype$multiply()}}
\item \href{#method-Phenotype-print}{\code{Phenotype$print()}}
\item \href{#method-Phenotype-clone}{\code{Phenotype$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-new"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-new}{}}}
\subsection{Method \code{new()}}{
Create a new Phenotype (base class)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$new(description = NULL, name = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{description}}{Plain text description of the phenotype}

\item{\code{name}}{Name of the phenotype}

\item{\code{...}}{Additional arguments}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-execute"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-execute}{}}}
\subsection{Method \code{execute()}}{
Execute the phenotype against provided tables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$execute(tables)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tables}}{Named list of tables (or Python dict)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PhenotypeTable object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-get_name}{}}}
\subsection{Method \code{get_name()}}{
Get the name of the phenotype
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$get_name()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-set_name"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-set_name}{}}}
\subsection{Method \code{set_name()}}{
Set the name of the phenotype
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$set_name(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{New name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-get_description"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-get_description}{}}}
\subsection{Method \code{get_description()}}{
Get the description of the phenotype
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$get_description()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-get_display_name"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-get_display_name}{}}}
\subsection{Method \code{get_display_name()}}{
Get display name (formatted version of name)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$get_display_name()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-get_codelists"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-get_codelists}{}}}
\subsection{Method \code{get_codelists()}}{
Get all codelists used in this phenotype
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$get_codelists(to_data_frame = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{to_data_frame}}{Logical, whether to return as data.frame}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of Codelist objects or data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-to_list}{}}}
\subsection{Method \code{to_list()}}{
Convert phenotype to dictionary/list representation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-or"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-or}{}}}
\subsection{Method \code{or()}}{
Combine phenotypes with OR logic
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$or(other)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other}}{Another Phenotype object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ComputationGraph object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-not"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-not}{}}}
\subsection{Method \code{not()}}{
Negate the phenotype (NOT logic)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$not()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ComputationGraph object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-add"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-add}{}}}
\subsection{Method \code{add()}}{
Add phenotypes (arithmetic combination)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$add(other)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other}}{Another Phenotype object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ComputationGraph object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-subtract"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-subtract}{}}}
\subsection{Method \code{subtract()}}{
Subtract phenotypes (arithmetic combination)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$subtract(other)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other}}{Another Phenotype object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ComputationGraph object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-multiply"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-multiply}{}}}
\subsection{Method \code{multiply()}}{
Multiply phenotypes (arithmetic combination)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$multiply(other)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other}}{Another Phenotype object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ComputationGraph object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-print"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-print}{}}}
\subsection{Method \code{print()}}{
Print the phenotype
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phenotype-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Phenotype-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phenotype$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
