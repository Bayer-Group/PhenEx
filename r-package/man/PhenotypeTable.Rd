% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenotype.R
\name{PhenotypeTable}
\alias{PhenotypeTable}
\title{PhenotypeTable Class}
\description{
PhenotypeTable Class

PhenotypeTable Class
}
\details{
R6 class wrapping PhenEx Python PhenotypeTable functionality
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{py_object}}{The underlying Python PhenotypeTable object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PhenotypeTable-new}{\code{PhenotypeTable$new()}}
\item \href{#method-PhenotypeTable-to_data_frame}{\code{PhenotypeTable$to_data_frame()}}
\item \href{#method-PhenotypeTable-head}{\code{PhenotypeTable$head()}}
\item \href{#method-PhenotypeTable-count}{\code{PhenotypeTable$count()}}
\item \href{#method-PhenotypeTable-colnames}{\code{PhenotypeTable$colnames()}}
\item \href{#method-PhenotypeTable-filter}{\code{PhenotypeTable$filter()}}
\item \href{#method-PhenotypeTable-join}{\code{PhenotypeTable$join()}}
\item \href{#method-PhenotypeTable-print}{\code{PhenotypeTable$print()}}
\item \href{#method-PhenotypeTable-clone}{\code{PhenotypeTable$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-new"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-new}{}}}
\subsection{Method \code{new()}}{
Initialize PhenotypeTable (usually created by Phenotype$execute())
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-to_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-to_data_frame}{}}}
\subsection{Method \code{to_data_frame()}}{
Convert to data.frame
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$to_data_frame(limit = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limit}}{Maximum number of rows to return}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-head"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-head}{}}}
\subsection{Method \code{head()}}{
Get first few rows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$head(n = 6)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{Number of rows}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-count"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-count}{}}}
\subsection{Method \code{count()}}{
Get number of rows
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$count()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Integer
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-colnames"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-colnames}{}}}
\subsection{Method \code{colnames()}}{
Get column names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$colnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-filter"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-filter}{}}}
\subsection{Method \code{filter()}}{
Filter the table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$filter(expr)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{expr}}{Filter expression (passed to Python)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PhenotypeTable object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-join"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-join}{}}}
\subsection{Method \code{join()}}{
Join with another table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$join(other, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other}}{Another PhenotypeTable or table object}

\item{\code{...}}{Additional arguments passed to join}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PhenotypeTable object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-print"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-print}{}}}
\subsection{Method \code{print()}}{
Print the table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeTable-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeTable-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeTable$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
