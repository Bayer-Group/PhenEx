.treeList {
  display: flex;
  flex-direction: column;
  gap: 0px;
  width: 100%;
}

.treeItem {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 0px;
  background-color: red;
}

/* Core tree structure */
.container {
  --indentation-width: 50px;
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 0px;
  background-color:blue;
}

/* Level-based indentation */
.container.level0 { padding-left: 0; }
.container.level1 { padding-left: var(--indentation-width); }
.container.level2 { padding-left: calc(var(--indentation-width) * 2); }
.container.level3 { padding-left: calc(var(--indentation-width) * 3); }

/* Tree structure elements */
.toggleButton {
  flex: 0 0 16px;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0;
  margin: 0 8px 0 0;
  opacity: 0.8;
}

.toggleButton span {
  display: block;
  transition: transform 0.2s ease;
}

.toggleButton.open span {
  transform: rotate(90deg);
}

/* Content area for custom renderers */
/* .content {
  display: flex;
  align-items: center;
  flex: 1;
  min-width: 0;
} */


.container.level0 {
  padding-left: 0;
}

.container.level1 {
  padding-left: calc(var(--indentation-width) * 1);
}

.container.level2 {
  padding-left: calc(var(--indentation-width) * 2);
}

.container.level3 {
  padding-left: calc(var(--indentation-width) * 3);
}

.container.level4 {
  padding-left: calc(var(--indentation-width) * 4); /* doesn't work for some reason*/
}

.container.level5 {
  padding-left: calc(var(--indentation-width) * 5);
}


.container:hover {
  /* background-color: yellow; */
}

.verticalLine {
  top: 0;
  bottom: 0;
  left: 0;
  position: absolute;
  width: 3px;
  height: 100%;
  background-color: var(--vscode-tree-indentGuidesStroke);
  opacity: 0.5;
  background-color: green;
}

.itemContent {
  position: relative;
  display: flex;
  align-items: center;
  padding: 4px;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
    margin-left: 40px;

}

/* Level-based indentation */
/* .itemContent.level0 {
  margin-left: 0;
}

.itemContent.level1 {
  margin-left: calc(var(--indentation-width) * 1);
}

.itemContent.level2 {
  margin-left: calc(var(--indentation-width) * 2);
}

.itemContent.level3 {
  margin-left: calc(var(--indentation-width) * 3);
} */

/* Vertical lines per level */
.verticalLine.level0{
  display: none;
}

.verticalLine.level1{
  margin-left: calc(var(--indentation-width) * 1);
}

.verticalLine.level2{
  margin-left: calc(var(--indentation-width) * 2);
}

.verticalLine.level3{
  margin-left: calc(var(--indentation-width) * 3);
}

.toggleButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 16px;
  height: 16px;
  border: none;
  background: transparent;
  cursor: pointer;
  padding: 0;
  margin-right: 4px;
  transition: transform 0.2s ease;
}

.toggleButton span {
  display: block;
  font-size: 12px;
}

.toggleButton.open span {
  transform: rotate(90deg);
}

.content {
  display: grid;
  align-items: center;
  flex: 1;
}

.children {
  display: flex;
  flex-direction: column;
  margin: 0;
  padding: 0;
}
