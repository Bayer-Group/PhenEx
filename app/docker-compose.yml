# Usage
#   Build:              docker compose build --no-cache --progress=plain
#   Run:                docker compose up
#   Stop:               docker compose down

name: phenex

networks:
  phenex:

services:
  backend:
    container_name: phenex-backend
    image: phenex-be:dev-local
    build:
      context: ./backend
      dockerfile: Dockerfile
      platforms:
      - "linux/amd64"
    networks:
      - phenex
    ports:
      - "8001:8000"
    volumes:
      - ${HOME}/data/phenex/cohorts:/app/data/cohorts
      - ${HOME}/data/phenex/users:/app/data/users
    env_file: ./.env

  frontend:
    container_name: phenex-frontend
    image: phenex-fe:dev-local
    build:
      context: ./ui
      dockerfile: Dockerfile
    networks:
      - phenex
    volumes:
      - ./ui:/app
    ports:
      - "5173:5173"
    env_file: ./.env

  be-bundle:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.model-bundle
      platforms:
      - "linux/amd64"
    networks:
      - phenex
    ports:
      - 9001:8000
    env_file: ./.env

  fe-bundle:
    build:
      context: ./ui
      dockerfile: ./Dockerfile.bundle
      platforms:
      - "linux/amd64"
    networks:
      - phenex
    ports:
      - 9111:5173
    env_file: ./.env.bundle

  # Comment out everything below this point if you are using an external Postgres database
  db:
    container_name: phenex-db
    image: postgres:15.8
    restart: unless-stopped
    volumes:
      - ${HOME}/volumes/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - phenex
    ports:
      - 9444:5432
    env_file:
      - ./.env

  adminer:
    container_name: phenex-adminer
    image: ghcr.io/shyim/adminerevo:latest
    restart: unless-stopped
    networks:
      - phenex
    ports:
      - 9091:8080
